{"ast":null,"code":"var _jsxFileName = \"/Users/zerowing/Desktop/PJT_New/file_management_frontend/project_root/Frontend/src/pages/DecryptorPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import CanvasComponent from '../components/CanvasComponent';\n// import '../App.css'\n// import BackButton from '../components/BackButton';\n\n// const DecryptorPage = () => {\n//   const { fileId } = useParams();\n//   const [fileContent, setFileContent] = useState(null);\n//   const [password, setPassword] = useState('');\n//   const canvasRef = useRef(null);\n\n//   useEffect(() => {\n//     console.log(\"Fetching file with ID:\", fileId); // Log file ID\n//     axios.get(`http://localhost:8000/files/${fileId}`, {\n//       headers: {\n//         Authorization: `Bearer ${localStorage.getItem('token')}`,\n//       },\n//     })\n//     .then(response => {\n//       console.log(\"API Response:\", response); // Log response data\n//       setFileContent(response.data.content);\n//     })\n//     .catch(error => {\n//       console.error(\"Error fetching file:\", error); // Log error if fetching fails\n//     });\n//   }, [fileId]);\n\n//   const handleDecrypt = () => {\n//     // Implement decryption logic here\n//     alert(\"File decrypted successfully!\");\n//   };\n\n//   return (\n//     <div>\n//       <h2>Decrypt File</h2>\n//       <input\n//         type=\"password\"\n//         placeholder=\"Password\"\n//         onChange={(e) => setPassword(e.target.value)}\n//       />\n//       <CanvasComponent ref={canvasRef} width={300} height={150} />\n//       <button onClick={handleDecrypt}>Decrypt</button>\n\n//       {fileContent ? (\n//         <a href={`data:application/octet-stream;base64,${fileContent}`} download=\"decrypted_file\">\n//           Download File\n//         </a>\n//       ) : (\n//         <p>Loading file content...</p>\n//       )}\n//       <BackButton />\n//     </div>\n//   );\n// };\n\n// export default DecryptorPage;\n\n// DecryptorPage.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport CanvasComponent from '../components/CanvasComponent';\nimport '../App.css';\nimport BackButton from '../components/BackButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DecryptorPage = () => {\n  _s();\n  const {\n    fileId\n  } = useParams();\n  const [fileContent, setFileContent] = useState(null);\n  const [password, setPassword] = useState('');\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    axios.get(`http://localhost:8000/files/${fileId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => setFileContent(response.data.content)).catch(error => console.error(\"Error fetching file:\", error));\n  }, [fileId]);\n  const handleDecrypt = () => {\n    alert(\"File decrypted successfully!\");\n  };\n\n  // Call the clearCanvas method on the canvasRef\n  const handleClearCanvas = () => {\n    canvasRef.current.clearCanvas();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Decrypt File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CanvasComponent, {\n      ref: canvasRef,\n      width: 300,\n      height: 150\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDecrypt,\n      children: \"Decrypt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearCanvas,\n      children: \"Clear Canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), \" \", fileContent ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `data:application/octet-stream;base64,${fileContent}`,\n      download: \"decrypted_file\",\n      children: \"Download File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading file content...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(DecryptorPage, \"mkWK6TKdlIBrtRteW820tyb3cJI=\", false, function () {\n  return [useParams];\n});\n_c = DecryptorPage;\nexport default DecryptorPage;\nvar _c;\n$RefreshReg$(_c, \"DecryptorPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","axios","CanvasComponent","BackButton","jsxDEV","_jsxDEV","DecryptorPage","_s","fileId","fileContent","setFileContent","password","setPassword","canvasRef","get","headers","Authorization","localStorage","getItem","then","response","data","content","catch","error","console","handleDecrypt","alert","handleClearCanvas","current","clearCanvas","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","ref","width","height","onClick","href","download","_c","$RefreshReg$"],"sources":["/Users/zerowing/Desktop/PJT_New/file_management_frontend/project_root/Frontend/src/pages/DecryptorPage.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import CanvasComponent from '../components/CanvasComponent';\n// import '../App.css'\n// import BackButton from '../components/BackButton';\n\n\n// const DecryptorPage = () => {\n//   const { fileId } = useParams();\n//   const [fileContent, setFileContent] = useState(null);\n//   const [password, setPassword] = useState('');\n//   const canvasRef = useRef(null);\n\n//   useEffect(() => {\n//     console.log(\"Fetching file with ID:\", fileId); // Log file ID\n//     axios.get(`http://localhost:8000/files/${fileId}`, {\n//       headers: {\n//         Authorization: `Bearer ${localStorage.getItem('token')}`,\n//       },\n//     })\n//     .then(response => {\n//       console.log(\"API Response:\", response); // Log response data\n//       setFileContent(response.data.content);\n//     })\n//     .catch(error => {\n//       console.error(\"Error fetching file:\", error); // Log error if fetching fails\n//     });\n//   }, [fileId]);\n\n//   const handleDecrypt = () => {\n//     // Implement decryption logic here\n//     alert(\"File decrypted successfully!\");\n//   };\n\n//   return (\n//     <div>\n//       <h2>Decrypt File</h2>\n//       <input\n//         type=\"password\"\n//         placeholder=\"Password\"\n//         onChange={(e) => setPassword(e.target.value)}\n//       />\n//       <CanvasComponent ref={canvasRef} width={300} height={150} />\n//       <button onClick={handleDecrypt}>Decrypt</button>\n\n//       {fileContent ? (\n//         <a href={`data:application/octet-stream;base64,${fileContent}`} download=\"decrypted_file\">\n//           Download File\n//         </a>\n//       ) : (\n//         <p>Loading file content...</p>\n//       )}\n//       <BackButton />\n//     </div>\n//   );\n// };\n\n// export default DecryptorPage;\n\n// DecryptorPage.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport CanvasComponent from '../components/CanvasComponent';\nimport '../App.css';\nimport BackButton from '../components/BackButton';\n\nconst DecryptorPage = () => {\n  const { fileId } = useParams();\n  const [fileContent, setFileContent] = useState(null);\n  const [password, setPassword] = useState('');\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    axios.get(`http://localhost:8000/files/${fileId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`,\n      },\n    })\n    .then(response => setFileContent(response.data.content))\n    .catch(error => console.error(\"Error fetching file:\", error));\n  }, [fileId]);\n\n  const handleDecrypt = () => {\n    alert(\"File decrypted successfully!\");\n  };\n\n  // Call the clearCanvas method on the canvasRef\n  const handleClearCanvas = () => {\n    canvasRef.current.clearCanvas();\n  };\n\n  return (\n    <div>\n      <h2>Decrypt File</h2>\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <CanvasComponent ref={canvasRef} width={300} height={150} />\n      <button onClick={handleDecrypt}>Decrypt</button>\n      <button onClick={handleClearCanvas}>Clear Canvas</button> {/* Clear Canvas Button */}\n\n      {fileContent ? (\n        <a href={`data:application/octet-stream;base64,${fileContent}`} download=\"decrypted_file\">\n          Download File\n        </a>\n      ) : (\n        <p>Loading file content...</p>\n      )}\n      <BackButton />\n    </div>\n  );\n};\n\nexport default DecryptorPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}