{"ast":null,"code":"var _jsxFileName = \"/Users/zerowing/Desktop/PJT_New/file_management_frontend/project_root/Frontend/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import DarkModeToggle from '../components/DarkModeToggle';\n// import '../App.css';\n// import BackButton from '../components/BackButton';\n\n// const LoginPage = () => {\n//   const [formData, setFormData] = useState({ name: '', password: '' });\n\n//   const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n//   const handleLogin = () => {\n//     // Handle login logic\n//   };\n\n//   return (\n//     <div className=\"form-container\">\n//       <BackButton />\n//       <DarkModeToggle />\n//       <h2>Log In</h2>\n//       <input className=\"form-input\" name=\"name\" placeholder=\"Name\" onChange={handleChange} />\n//       <input className=\"form-input\" name=\"password\" placeholder=\"Password\" type=\"password\" onChange={handleChange} />\n//       <button className=\"form-button\" onClick={handleLogin}>Log In</button>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\n// pages/LoginPage.js\nimport React, { useState } from 'react';\nimport { useAuth } from '../components/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const {\n    login\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const handleLogin = async () => {\n    const response = await fetch(\"http://127.0.0.1:8000/login/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    if (data.access_token) {\n      login(data.access_token); // Store token using AuthContext\n      alert(\"Logged in successfully\");\n    } else {\n      alert(\"Login failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"username\",\n      placeholder: \"Username\",\n      onChange: e => setFormData({\n        ...formData,\n        username: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: e => setFormData({\n        ...formData,\n        password: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n};\n_s(LoginPage, \"hobUvQZepJjcN2VsFHB6uXSBE3o=\", false, function () {\n  return [useAuth];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useAuth","jsxDEV","_jsxDEV","LoginPage","_s","login","formData","setFormData","username","password","handleLogin","response","fetch","method","headers","body","JSON","stringify","data","json","access_token","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","name","placeholder","onChange","e","target","value","type","onClick","_c","$RefreshReg$"],"sources":["/Users/zerowing/Desktop/PJT_New/file_management_frontend/project_root/Frontend/src/pages/LoginPage.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import DarkModeToggle from '../components/DarkModeToggle';\n// import '../App.css';\n// import BackButton from '../components/BackButton';\n\n// const LoginPage = () => {\n//   const [formData, setFormData] = useState({ name: '', password: '' });\n\n//   const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n//   const handleLogin = () => {\n//     // Handle login logic\n//   };\n\n//   return (\n//     <div className=\"form-container\">\n//       <BackButton />\n//       <DarkModeToggle />\n//       <h2>Log In</h2>\n//       <input className=\"form-input\" name=\"name\" placeholder=\"Name\" onChange={handleChange} />\n//       <input className=\"form-input\" name=\"password\" placeholder=\"Password\" type=\"password\" onChange={handleChange} />\n//       <button className=\"form-button\" onClick={handleLogin}>Log In</button>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\n// pages/LoginPage.js\nimport React, { useState } from 'react';\nimport { useAuth } from '../components/AuthContext';\n\nconst LoginPage = () => {\n  const { login } = useAuth();\n  const [formData, setFormData] = useState({ username: '', password: '' });\n\n  const handleLogin = async () => {\n      const response = await fetch(\"http://127.0.0.1:8000/login/\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(formData),\n      });\n      const data = await response.json();\n      if (data.access_token) {\n          login(data.access_token);  // Store token using AuthContext\n          alert(\"Logged in successfully\");\n      } else {\n          alert(\"Login failed\");\n      }\n  };\n\n  return (\n      <div>\n          <h2>Log In</h2>\n          <input name=\"username\" placeholder=\"Username\" onChange={(e) => setFormData({ ...formData, username: e.target.value })} />\n          <input name=\"password\" placeholder=\"Password\" type=\"password\" onChange={(e) => setFormData({ ...formData, password: e.target.value })} />\n          <button onClick={handleLogin}>Log In</button>\n      </div>\n  );\n};\n\nexport default LoginPage;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAM,CAAC,GAAGL,OAAO,CAAC,CAAC;EAC3B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IAAES,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAExE,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MACzDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ;IACjC,CAAC,CAAC;IACF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAACE,YAAY,EAAE;MACnBf,KAAK,CAACa,IAAI,CAACE,YAAY,CAAC,CAAC,CAAE;MAC3BC,KAAK,CAAC,wBAAwB,CAAC;IACnC,CAAC,MAAM;MACHA,KAAK,CAAC,cAAc,CAAC;IACzB;EACJ,CAAC;EAED,oBACInB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfxB,OAAA;MAAOyB,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAGC,CAAC,IAAKvB,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEE,QAAQ,EAAEsB,CAAC,CAACC,MAAM,CAACC;MAAM,CAAC;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzHxB,OAAA;MAAOyB,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,UAAU;MAACK,IAAI,EAAC,UAAU;MAACJ,QAAQ,EAAGC,CAAC,IAAKvB,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEG,QAAQ,EAAEqB,CAAC,CAACC,MAAM,CAACC;MAAM,CAAC;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzIxB,OAAA;MAAQgC,OAAO,EAAExB,WAAY;MAAAY,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEZ,CAAC;AAACtB,EAAA,CA3BID,SAAS;EAAA,QACKH,OAAO;AAAA;AAAAmC,EAAA,GADrBhC,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}