{"ast":null,"code":"var _jsxFileName = \"/Users/zerowing/Desktop/PJT_New/file_management_frontend/project_root/Frontend/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import DarkModeToggle from '../components/DarkModeToggle';\n// import '../App.css';\n// import BackButton from '../components/BackButton';\n\n// const LoginPage = () => {\n//   const [formData, setFormData] = useState({ name: '', password: '' });\n\n//   const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n//   const handleLogin = () => {\n//     // Handle login logic\n//   };\n\n//   return (\n//     <div className=\"form-container\">\n//       <BackButton />\n//       <DarkModeToggle />\n//       <h2>Log In</h2>\n//       <input className=\"form-input\" name=\"name\" placeholder=\"Name\" onChange={handleChange} />\n//       <input className=\"form-input\" name=\"password\" placeholder=\"Password\" type=\"password\" onChange={handleChange} />\n//       <button className=\"form-button\" onClick={handleLogin}>Log In</button>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\n// pages/LoginPage.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    password: ''\n  });\n  const handleLogin = async () => {\n    const response = await fetch(\"http://localhost:8000/login/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    localStorage.setItem(\"token\", data.access_token);\n    alert(\"Logged in successfully\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"name\",\n      placeholder: \"Name\",\n      onChange: e => setFormData({\n        ...formData,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: e => setFormData({\n        ...formData,\n        password: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"nd05BGkjX5zNQAQVQyBcXjfmWGw=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","_s","formData","setFormData","name","password","handleLogin","response","fetch","method","headers","body","JSON","stringify","data","json","localStorage","setItem","access_token","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","value","type","onClick","_c","$RefreshReg$"],"sources":["/Users/zerowing/Desktop/PJT_New/file_management_frontend/project_root/Frontend/src/pages/LoginPage.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import DarkModeToggle from '../components/DarkModeToggle';\n// import '../App.css';\n// import BackButton from '../components/BackButton';\n\n// const LoginPage = () => {\n//   const [formData, setFormData] = useState({ name: '', password: '' });\n\n//   const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n//   const handleLogin = () => {\n//     // Handle login logic\n//   };\n\n//   return (\n//     <div className=\"form-container\">\n//       <BackButton />\n//       <DarkModeToggle />\n//       <h2>Log In</h2>\n//       <input className=\"form-input\" name=\"name\" placeholder=\"Name\" onChange={handleChange} />\n//       <input className=\"form-input\" name=\"password\" placeholder=\"Password\" type=\"password\" onChange={handleChange} />\n//       <button className=\"form-button\" onClick={handleLogin}>Log In</button>\n//     </div>\n//   );\n// };\n\n// export default LoginPage;\n\n// pages/LoginPage.js\nimport React, { useState } from 'react';\n\nconst LoginPage = () => {\n  const [formData, setFormData] = useState({ name: '', password: '' });\n\n  const handleLogin = async () => {\n    const response = await fetch(\"http://localhost:8000/login/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    });\n    const data = await response.json();\n    localStorage.setItem(\"token\", data.access_token);\n    alert(\"Logged in successfully\");\n  };\n\n  return (\n    <div>\n      <h2>Log In</h2>\n      <input name=\"name\" placeholder=\"Name\" onChange={(e) => setFormData({ ...formData, name: e.target.value })} />\n      <input name=\"password\" placeholder=\"Password\" type=\"password\" onChange={(e) => setFormData({ ...formData, password: e.target.value })} />\n      <button onClick={handleLogin}>Log In</button>\n    </div>\n  );\n};\n\nexport default LoginPage;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IAAEO,IAAI,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAEpE,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ;IAC/B,CAAC,CAAC;IACF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,YAAY,CAAC;IAChDC,KAAK,CAAC,wBAAwB,CAAC;EACjC,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfzB,OAAA;MAAOK,IAAI,EAAC,MAAM;MAACqB,WAAW,EAAC,MAAM;MAACC,QAAQ,EAAGC,CAAC,IAAKxB,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEE,IAAI,EAAEuB,CAAC,CAACC,MAAM,CAACC;MAAM,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7GzB,OAAA;MAAOK,IAAI,EAAC,UAAU;MAACqB,WAAW,EAAC,UAAU;MAACK,IAAI,EAAC,UAAU;MAACJ,QAAQ,EAAGC,CAAC,IAAKxB,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEG,QAAQ,EAAEsB,CAAC,CAACC,MAAM,CAACC;MAAM,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzIzB,OAAA;MAAQgC,OAAO,EAAEzB,WAAY;MAAAc,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACvB,EAAA,CAxBID,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}