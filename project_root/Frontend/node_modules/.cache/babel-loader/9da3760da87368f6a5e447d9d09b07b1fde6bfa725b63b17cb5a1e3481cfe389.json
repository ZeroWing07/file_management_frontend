{"ast":null,"code":"var _jsxFileName = \"/Users/zerowing/Desktop/PJT_New/file_management_frontend/project_root/Frontend/src/pages/SignupPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport CanvasComponent from '../components/CanvasComponent';\nimport BackButton from '../components/BackButton';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupPage = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const canvasRef = useRef(null);\n  const handleSignup = async () => {\n    if (canvasRef.current) {\n      const signatureDataUrl = canvasRef.current.toDataURL();\n\n      // Prepare form data, including the signature image\n      const userData = {\n        name,\n        age,\n        password,\n        signature: signatureDataUrl\n      };\n      try {\n        const response = await axios.post('http://localhost:8000/signup', userData);\n        if (response.status === 200) {\n          alert('Signup successful!');\n        }\n      } catch (error) {\n        console.error('Signup failed', error);\n        alert('Signup failed. Please try again.');\n      }\n    } else {\n      alert(\"Signature canvas is not available.\");\n    }\n  };\n  const handleClearCanvas = () => {\n    if (canvasRef.current) {\n      canvasRef.current.clearCanvas(); // Clear the canvas\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Age\",\n      value: age,\n      onChange: e => setAge(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Draw your signature:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CanvasComponent, {\n      ref: canvasRef,\n      width: 200,\n      height: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearCanvas,\n      children: \"Clear Canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignup,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupPage, \"ZKWdWiG9uXrxdv2UZ9MSAwvaj5M=\");\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","useRef","axios","CanvasComponent","BackButton","jsxDEV","_jsxDEV","SignupPage","_s","name","setName","age","setAge","password","setPassword","confirmPassword","setConfirmPassword","canvasRef","handleSignup","current","signatureDataUrl","toDataURL","userData","signature","response","post","status","alert","error","console","handleClearCanvas","clearCanvas","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","ref","width","height","onClick","_c","$RefreshReg$"],"sources":["/Users/zerowing/Desktop/PJT_New/file_management_frontend/project_root/Frontend/src/pages/SignupPage.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport CanvasComponent from '../components/CanvasComponent';\nimport BackButton from '../components/BackButton';\nimport '../App.css';\n\nconst SignupPage = () => {\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const canvasRef = useRef(null);\n\n  const handleSignup = async () => {\n    if (canvasRef.current) {\n      const signatureDataUrl = canvasRef.current.toDataURL();\n  \n      // Prepare form data, including the signature image\n      const userData = {\n        name,\n        age,\n        password,\n        signature: signatureDataUrl,\n      };\n  \n      try {\n        const response = await axios.post('http://localhost:8000/signup', userData);\n        if (response.status === 200) {\n          alert('Signup successful!');\n        }\n      } catch (error) {\n        console.error('Signup failed', error);\n        alert('Signup failed. Please try again.');\n      }\n    } else {\n      alert(\"Signature canvas is not available.\");\n    }\n  };\n\n  const handleClearCanvas = () => {\n    if (canvasRef.current) {\n      canvasRef.current.clearCanvas(); // Clear the canvas\n    }\n  };\n\n  return (\n    <div className=\"signup-container\">\n      <h1>Signup</h1>\n      <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\n      <input type=\"number\" placeholder=\"Age\" value={age} onChange={(e) => setAge(e.target.value)} />\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      <input type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\n      \n      <h3>Draw your signature:</h3>\n      <CanvasComponent ref={canvasRef} width={200} height={200} />\n      <button onClick={handleClearCanvas}>Clear Canvas</button> {/* Clear Canvas Button */}\n\n      <button onClick={handleSignup}>Sign Up</button>\n      <BackButton />\n    </div>\n  );\n};\n\nexport default SignupPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}